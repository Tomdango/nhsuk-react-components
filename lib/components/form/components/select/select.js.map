{"version":3,"sources":["../../../../../src/components/form/components/select/select.jsx"],"names":["Select","props","context","e","target","value","name","setState","selectedValue","updateFormState","initialState","initialiseComponent","state","error","passBackError","registerComponent","label","labelHtmlFor","hint","children","className","rest","onChange","Component","FormContext","Option"],"mappings":"m2GASqBA,CAAAA,M,0BAyBnB,WAAYC,CAAZ,CAAmBC,CAAnB,CAA4B,8FACpBD,CADoB,CACbC,CADa,wDAkBjB,SAAAC,CAAC,CAAI,OACUA,CAAC,CAACC,MADZ,CACNC,CADM,GACNA,KADM,CACCC,CADD,GACCA,IADD,CAEd,EAAKC,QAAL,CAAc,CAAEC,aAAa,CAAEH,CAAjB,CAAd,CAAwC,UAAM,IACpCI,CAAAA,CADoC,CAChB,EAAKP,OADW,CACpCO,eADoC,CAExCA,CAFwC,EAG1CA,CAAe,CAACH,CAAD,CAAOD,CAAP,CAElB,CALD,CAMD,CA1B2B,EAE1B,GAAMK,CAAAA,CAAY,CAAG,EAAKC,mBAAL,EAArB,CAF0B,MAG1B,GAAKC,KAAL,CAAaF,CAHa,EAI3B,C,iGAEmB,OACM,KAAKT,KADX,CACVK,CADU,GACVA,IADU,CACJO,CADI,GACJA,KADI,CAEVC,CAFU,CAEQ,KAAKZ,OAFb,CAEVY,aAFU,CAGdA,CAHc,EAGCA,CAAa,CAACR,CAAD,CAAO,CAAC,CAACO,CAAT,CAAgBA,CAAhB,CACjC,C,+DAEoB,OACK,KAAKZ,KADV,CACXK,CADW,GACXA,IADW,CACLO,CADK,GACLA,KADK,CAEXC,CAFW,CAEO,KAAKZ,OAFZ,CAEXY,aAFW,CAGfA,CAHe,EAGAA,CAAa,CAACR,CAAD,CAAO,CAAC,CAACO,CAAT,CAAgBA,CAAhB,CACjC,C,iEAYqB,OACW,KAAKZ,KADhB,CACZK,CADY,GACZA,IADY,CACND,CADM,GACNA,KADM,CACCQ,CADD,GACCA,KADD,CAEZC,CAFY,CAEM,KAAKZ,OAFX,CAEZY,aAFY,CAGhBA,CAHgB,EAGDA,CAAa,CAACR,CAAD,CAAO,CAAC,CAACO,CAAT,CAAgBA,CAAhB,CAHZ,IAKZE,CAAAA,CALY,CAKU,KAAKb,OALf,CAKZa,iBALY,CASpB,MAHIA,CAAAA,CAGJ,EAFEA,CAAiB,CAACT,CAAD,CAAOD,CAAP,CAEnB,CALqB,CAAEG,aAAa,CAAEH,CAAjB,CAMtB,C,uCAEQ,OAWH,KAAKJ,KAXF,CAELe,CAFK,GAELA,KAFK,CAGLC,CAHK,GAGLA,YAHK,CAILC,CAJK,GAILA,IAJK,CAKLL,CALK,GAKLA,KALK,CAMLP,CANK,GAMLA,IANK,CAOLa,CAPK,GAOLA,QAPK,CAQLC,CARK,GAQLA,SARK,CASLf,CATK,GASLA,KATK,CAUFgB,CAVE,2GAYCb,CAZD,CAYmB,KAAKI,KAZxB,CAYCJ,aAZD,CAaP,MACE,iEACGQ,CAAK,CAAG,gCAAC,iBAAD,EAAO,OAAO,CAAEC,CAAhB,EAA+BD,CAA/B,CAAH,CAAmD,IAD3D,CAEGE,CAAI,CAAG,gCAAC,gBAAD,MAAOA,CAAP,CAAH,CAAyB,IAFhC,CAGGL,CAAK,CAAG,gCAAC,wBAAD,MAAeA,CAAf,CAAH,CAA0C,IAHlD,CAKE,mDACE,SAAS,CAAE,2BACT,cADS,CAET,CACE,sBAAuBA,CADzB,CAFS,CAKTO,CALS,CADb,CAQE,QAAQ,CAAE,KAAKE,QARjB,CASE,IAAI,CAAEhB,CATR,CAUE,KAAK,CAAEE,CAVT,EAWMa,CAXN,EAaGF,CAbH,CALF,CAsBH,C,OArGiCI,gB,4CAAfvB,M,eACEwB,uB,kBADFxB,M,UAGHyB,kB,kBAHGzB,M,gBAgBG,CACpBgB,KAAK,CAAE,EADa,CAEpBC,YAAY,CAAE,EAFM,CAGpBC,IAAI,CAAE,EAHc,CAIpBL,KAAK,CAAE,EAJa,CAKpBO,SAAS,CAAE,EALS,CAMpBf,KAAK,CAAE,EANa,C","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FormContext from '../../FormContext';\nimport Label from '../../../label';\nimport Hint from '../../../hint';\nimport ErrorMessage from '../../../error-message';\nimport Option from './option';\n\nexport default class Select extends Component {\n  static contextType = FormContext;\n\n  static Option = Option;\n\n  static propTypes = {\n    label: PropTypes.string,\n    labelHtmlFor: PropTypes.string,\n    hint: PropTypes.string,\n    error: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n    className: PropTypes.string,\n    value: PropTypes.string\n  };\n\n  static defaultProps = {\n    label: '',\n    labelHtmlFor: '',\n    hint: '',\n    error: '',\n    className: '',\n    value: ''\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    const initialState = this.initialiseComponent();\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    const { name, error } = this.props;\n    const { passBackError } = this.context;\n    if (passBackError) passBackError(name, !!error, error);\n  }\n\n  componentDidUpdate() {\n    const { name, error } = this.props;\n    const { passBackError } = this.context;\n    if (passBackError) passBackError(name, !!error, error);\n  }\n\n  onChange = e => {\n    const { value, name } = e.target;\n    this.setState({ selectedValue: value }, () => {\n      const { updateFormState } = this.context;\n      if (updateFormState) {\n        updateFormState(name, value);\n      }\n    });\n  };\n\n  initialiseComponent() {\n    const { name, value, error } = this.props;\n    const { passBackError } = this.context;\n    if (passBackError) passBackError(name, !!error, error);\n    const initialState = { selectedValue: value };\n    const { registerComponent } = this.context;\n    if (registerComponent) {\n      registerComponent(name, value);\n    }\n    return initialState;\n  }\n\n  render() {\n    const {\n      label,\n      labelHtmlFor,\n      hint,\n      error,\n      name,\n      children,\n      className,\n      value,\n      ...rest\n    } = this.props;\n    const { selectedValue } = this.state;\n    return (\n      <>\n        {label ? <Label htmlFor={labelHtmlFor}>{label}</Label> : null}\n        {hint ? <Hint>{hint}</Hint> : null}\n        {error ? <ErrorMessage>{error}</ErrorMessage> : null}\n\n        <select\n          className={classNames(\n            'nhsuk-select',\n            {\n              'nhsuk-select--error': error\n            },\n            className\n          )}\n          onChange={this.onChange}\n          name={name}\n          value={selectedValue}\n          {...rest}\n        >\n          {children}\n        </select>\n      </>\n    );\n  }\n}\n"],"file":"select.js"}