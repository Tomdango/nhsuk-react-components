{"version":3,"sources":["../../../../../src/components/form/components/radios/radios.jsx"],"names":["Radios","props","context","updateFormState","radioSelected","state","name","e","value","target","setState","_passValuesContext","children","id","React","Children","map","child","i","type","Radio","cloneElement","initialState","initialiseComponent","error","passBackError","registerComponent","forEach","selected","toString","label","hint","labelHtmlFor","className","inline","rest","contextValue","handleClick","_handleClick","modifiedChildren","PureComponent","Divider","FormContext"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport FormContext from '../../FormContext';\nimport RadioContext from './RadioContext';\nimport Label from '../../../label';\nimport Hint from '../../../hint';\nimport ErrorMessage from '../../../error-message';\nimport Radio from './radio';\nimport Divider from './divider';\n\nclass Radios extends PureComponent {\n  static Radio = Radio;\n\n  static Divider = Divider;\n\n  static contextType = FormContext;\n\n  static propTypes = {\n    label: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    hint: PropTypes.string,\n    error: PropTypes.string,\n    labelHtmlFor: PropTypes.string,\n    className: PropTypes.string,\n    inline: PropTypes.bool,\n    id: PropTypes.string,\n    children: PropTypes.node.isRequired\n  };\n\n  static defaultProps = {\n    label: '',\n    hint: '',\n    error: '',\n    id: '',\n    labelHtmlFor: '',\n    className: '',\n    inline: false\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    const initialState = this.initialiseComponent();\n    this.state = initialState;\n  }\n\n  componentDidUpdate() {\n    const { name, error } = this.props;\n    const { passBackError } = this.context;\n    if (passBackError) passBackError(name, !!error, error);\n  }\n\n  _passValuesContext = () => {\n    const { updateFormState } = this.context;\n    if (updateFormState) {\n      const { radioSelected } = this.state;\n      const { name } = this.props;\n      updateFormState(name, radioSelected);\n    }\n  };\n\n  _handleClick = e => {\n    const { value } = e.target;\n    this.setState({ radioSelected: value }, this._passValuesContext);\n  };\n\n  modifiedChildren = () => {\n    const { children, id } = this.props;\n    return React.Children.map(children, (child, i) => {\n      if (child === null) return child;\n      const { type } = child;\n      if (type === Radios.Radio) {\n        return React.cloneElement(child, {\n          id: `${id}-radio-${i}`\n        });\n      }\n      return child;\n    });\n  };\n\n  initialiseComponent() {\n    const { name, children, error } = this.props;\n    const { registerComponent, passBackError } = this.context;\n    if (passBackError) passBackError(name, !!error, error);\n    let radioSelected = '';\n    React.Children.forEach(children, child => {\n      const { type } = child;\n      if (type === Radios.Radio) {\n        const { selected, value } = child.props;\n        if (selected) {\n          radioSelected = value.toString();\n        }\n      }\n    });\n    if (registerComponent) {\n      registerComponent(name, radioSelected);\n    }\n    return { radioSelected };\n  }\n\n  render() {\n    const {\n      label,\n      hint,\n      error,\n      name,\n      labelHtmlFor,\n      className,\n      inline,\n      children,\n      ...rest\n    } = this.props;\n    const { radioSelected } = this.state;\n    const contextValue = {\n      name,\n      handleClick: this._handleClick,\n      radioSelected\n    };\n    return (\n      <>\n        {label ? <Label htmlFor={labelHtmlFor}>{label}</Label> : null}\n        {hint ? <Hint>{hint}</Hint> : null}\n        {error ? <ErrorMessage>{error}</ErrorMessage> : null}\n        <div\n          className={classNames(\n            'nhsuk-radios',\n            { 'nhsuk-radios--inline': inline },\n            className\n          )}\n          {...rest}\n        >\n          <RadioContext.Provider value={contextValue}>\n            {this.modifiedChildren()}\n          </RadioContext.Provider>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Radios;\n"],"file":"radios.js"}