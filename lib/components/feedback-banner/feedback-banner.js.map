{"version":3,"sources":["../../../src/components/feedback-banner/feedback-banner.jsx"],"names":["isScrolledIntoView","element","rect","getBoundingClientRect","elemTop","top","elemBottom","bottom","isVisible","window","innerHeight","mockFooter","FeedbackBanner","props","state","shown","jsInView","toggleBanner","bind","unstickBanner","initialPendingTimeout","timer","timeout","setTimeout","addEventListener","clearTimeout","removeEventListener","toggle","setState","testVars","useMockFooter","forceScrolledIntoView","forceDidScroll","didScroll","footer","document","querySelector","setInterval","inView","title","children","label","href","onClick","className","visuallyHiddenText","id","rest","React","Component"],"mappings":"yhFAKMA,CAAAA,kBAAkB,CAAG,SAAAC,CAAO,CAAI,IAC9BC,CAAAA,CAAI,CAAGD,CAAO,CAACE,qBAAR,EADuB,CAE9BC,CAAO,CAAGF,CAAI,CAACG,GAFe,CAG9BC,CAAU,CAAGJ,CAAI,CAACK,MAHY,CAI9BC,CAAS,CAAGJ,CAAO,CAAGK,MAAM,CAACC,WAAjB,EAA8C,CAAd,EAAAJ,CAJd,CAKpC,MAAOE,CAAAA,CACR,C,CAEKG,UAAU,CAAG,CACjBR,qBAAqB,CAAE,uCAAO,CAAEE,GAAG,CAAE,EAAP,CAAWE,MAAM,CAAE,EAAnB,CAAP,CADN,C,CAIbK,c,0BAwBJ,WAAYC,CAAZ,CAAmB,qGACXA,CADW,GAEjB,EAAKC,KAAL,CAAa,CACXC,KAAK,GADM,CAEXC,QAAQ,GAFG,CAFI,CAMjB,EAAKC,YAAL,CAAoB,EAAKA,YAAL,CAAkBC,IAAlB,2BANH,CAOjB,EAAKC,aAAL,CAAqB,EAAKA,aAAL,CAAmBD,IAAnB,2BAPJ,CAQjB,EAAKE,qBAAL,GARiB,CASjB,EAAKC,KAAL,GATiB,EAUlB,C,iGAEmB,YACVC,CADU,CACE,KAAKT,KADP,CACVS,OADU,CAElB,KAAKF,qBAAL,CAA6BG,UAAU,CAAC,UAAM,CAC5C,CAAI,CAACN,YAAL,IAD4C,CAE5C,CAAI,CAACG,qBAAL,GACD,CAHsC,CAGpCE,CAHoC,CAFrB,CAMlBb,MAAM,CAACe,gBAAP,CAAwB,QAAxB,CAAkC,KAAKL,aAAvC,CACD,C,mEAEsB,CACjB,KAAKC,qBADY,EAEnBK,YAAY,CAAC,KAAKL,qBAAN,CAFO,CAIjB,KAAKC,KAJY,EAKnBI,YAAY,CAAC,KAAKJ,KAAN,CALO,CAOrBZ,MAAM,CAACiB,mBAAP,CAA2B,QAA3B,CAAqC,KAAKP,aAA1C,CACD,C,mDAE8B,IAAlBQ,CAAAA,CAAkB,wDAAT,OAAS,CAC7B,GAAe,OAAX,GAAAA,CAAJ,CAAwB,IACdZ,CAAAA,CADc,CACJ,KAAKD,KADD,CACdC,KADc,CAEtB,KAAKa,QAAL,CAAc,CAAEb,KAAK,CAAE,CAACA,CAAV,CAAd,CACD,CAHD,IAIE,MAAKa,QAAL,CAAc,CAAEb,KAAK,CAAEY,CAAT,CAAd,CAEH,C,qDAQC,YALAE,CAKA,wDALW,CACTC,aAAa,GADJ,CAETC,qBAAqB,OAFZ,CAGTC,cAAc,OAHL,CAKX,CACQA,CADR,CACiEH,CADjE,CACQG,cADR,CACwBF,CADxB,CACiED,CADjE,CACwBC,aADxB,CACuCC,CADvC,CACiEF,CADjE,CACuCE,qBADvC,CAEIE,CAAS,CAAG,SAAAD,CAAH,EAA0CA,CAFvD,CAGME,CAAM,CAAGJ,CAAa,CACxBnB,UADwB,CAExBwB,QAAQ,CAACC,aAAT,CAAuB,eAAvB,CALJ,CAMIF,CANJ,GAOM,KAAKb,KAPX,EAQII,YAAY,CAAC,KAAKJ,KAAN,CARhB,CAUE,KAAKA,KAAL,CAAagB,WAAW,CAAC,UAAM,CAC7B,GAAIJ,CAAJ,CAAe,CACb,GAAMK,CAAAA,CAAM,CACV,SAAAP,CAAqB,CACjB/B,kBAAkB,CAACkC,CAAD,CADD,CAEjBH,CAHN,CAIIO,CALS,CAMX,CAAI,CAACV,QAAL,CAAc,CAAEZ,QAAQ,GAAV,CAAd,CANW,CAQX,CAAI,CAACY,QAAL,CAAc,CAAEZ,QAAQ,GAAV,CAAd,CAEH,CACF,CAZuB,CAYrB,EAZqB,CAV1B,CAuBEiB,CAAS,CAAG,SAAAD,CAAH,EAAyCA,CAvBpD,CAyBD,C,uCAEQ,cAWH,KAAKnB,KAXF,CAEL0B,CAFK,GAELA,KAFK,CAGLC,CAHK,GAGLA,QAHK,CAILC,CAJK,GAILA,KAJK,CAKLC,CALK,GAKLA,IALK,CAMLC,CANK,GAMLA,OANK,CAOLC,CAPK,GAOLA,SAPK,CAQLC,CARK,GAQLA,kBARK,CASLC,CATK,GASLA,EATK,CAUFC,CAVE,mHAYqB,KAAKjC,KAZ1B,CAYCC,CAZD,GAYCA,KAZD,CAYQC,CAZR,GAYQA,QAZR,CAaP,MACE,iDACE,SAAS,CAAE,2BACT,uBADS,CAET,CAAE,+BAAgCD,CAAlC,CAFS,CAGT,CAAE,YAAaC,CAAf,CAHS,CAIT4B,CAJS,CADb,CAOE,EAAE,CAAEE,CAPN,EAQMC,CARN,EAUE,gCAAC,iBAAD,MACE,gCAAC,WAAD,MACE,gCAAC,WAAD,CAAK,MAAL,EAAY,KAAK,CAAC,MAAlB,EACE,uCAAK,SAAS,CAAC,gCAAf,EACE,sCAAI,SAAS,CAAC,gCAAd,EAAgDR,CAAhD,CADF,CAEE,qCAAG,SAAS,CAAC,gCAAb,EACGC,CADH,CAEGC,CAAK,CACJ,qCACE,IAAI,CAAEC,CADR,CAEE,OAAO,CAAEC,CAFX,CAGE,EAAE,WAAKG,CAAE,WAAMA,CAAN,YAAoB,IAA3B,CAHJ,CAIE,SAAS,CAAC,6CAJZ,EAMGL,CANH,CADI,CASF,IAXN,CAFF,CAeE,0CACE,SAAS,CAAC,8BADZ,CAEE,EAAE,CAAC,6BAFL,CAGE,IAAI,CAAC,QAHP,CAIE,OAAO,CAAE,iBAAM,CAAA,CAAI,CAACxB,YAAL,IAAN,CAJX,UAOE,wCAAM,SAAS,CAAC,yBAAhB,EACG4B,CADH,CAPF,CAfF,CADF,CADF,CADF,CAVF,CA6CH,C,OA5J0BG,kBAAMC,S,kBAA7BrC,c,gBAakB,CACpBkC,EAAE,CAAE,uBADgB,CAEpBxB,OAAO,CAAE,GAFW,CAGpBiB,KAAK,CAAE,EAHa,CAIpBE,KAAK,CAAE,EAJa,CAKpBC,IAAI,CAAE,GALc,CAMpBC,OAAO,CAAE,kBAAM,CAAE,CANG,CAOpBE,kBAAkB,CAAE,kBAPA,CAQpBD,SAAS,CAAE,EARS,C,eAkJThC,c","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Container, Row } from '../layout';\n\nconst isScrolledIntoView = element => {\n  const rect = element.getBoundingClientRect();\n  const elemTop = rect.top;\n  const elemBottom = rect.bottom;\n  const isVisible = elemTop < window.innerHeight && elemBottom >= 0;\n  return isVisible;\n};\n\nconst mockFooter = {\n  getBoundingClientRect: () => ({ top: 10, bottom: 20 })\n};\n\nclass FeedbackBanner extends React.Component {\n  static propTypes = {\n    id: PropTypes.string,\n    timeout: PropTypes.number,\n    title: PropTypes.string,\n    children: PropTypes.node.isRequired,\n    label: PropTypes.node,\n    href: PropTypes.string,\n    onClick: PropTypes.func,\n    visuallyHiddenText: PropTypes.string,\n    className: PropTypes.string\n  };\n\n  static defaultProps = {\n    id: 'nhsuk-feedback-banner',\n    timeout: 3000,\n    title: '',\n    label: '',\n    href: '#',\n    onClick: () => {},\n    visuallyHiddenText: ' feedback invite',\n    className: ''\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      shown: false,\n      jsInView: false\n    };\n    this.toggleBanner = this.toggleBanner.bind(this);\n    this.unstickBanner = this.unstickBanner.bind(this);\n    this.initialPendingTimeout = false;\n    this.timer = false;\n  }\n\n  componentDidMount() {\n    const { timeout } = this.props;\n    this.initialPendingTimeout = setTimeout(() => {\n      this.toggleBanner(true);\n      this.initialPendingTimeout = false;\n    }, timeout);\n    window.addEventListener('scroll', this.unstickBanner);\n  }\n\n  componentWillUnmount() {\n    if (this.initialPendingTimeout) {\n      clearTimeout(this.initialPendingTimeout);\n    }\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n    window.removeEventListener('scroll', this.unstickBanner);\n  }\n\n  toggleBanner(toggle = 'unset') {\n    if (toggle === 'unset') {\n      const { shown } = this.state;\n      this.setState({ shown: !shown });\n    } else {\n      this.setState({ shown: toggle });\n    }\n  }\n\n  unstickBanner(\n    testVars = {\n      useMockFooter: false,\n      forceScrolledIntoView: undefined,\n      forceDidScroll: undefined\n    }\n  ) {\n    const { forceDidScroll, useMockFooter, forceScrolledIntoView } = testVars;\n    let didScroll = forceDidScroll === undefined ? false : forceDidScroll;\n    const footer = useMockFooter\n      ? mockFooter\n      : document.querySelector('#nhsuk-footer');\n    if (footer) {\n      if (this.timer) {\n        clearTimeout(this.timer);\n      }\n      this.timer = setInterval(() => {\n        if (didScroll) {\n          const inView =\n            forceScrolledIntoView === undefined\n              ? isScrolledIntoView(footer)\n              : forceScrolledIntoView;\n          if (inView) {\n            this.setState({ jsInView: true });\n          } else {\n            this.setState({ jsInView: false });\n          }\n        }\n      }, 50);\n      didScroll = forceDidScroll === undefined ? true : forceDidScroll;\n    }\n  }\n\n  render() {\n    const {\n      title,\n      children,\n      label,\n      href,\n      onClick,\n      className,\n      visuallyHiddenText,\n      id,\n      ...rest\n    } = this.props;\n    const { shown, jsInView } = this.state;\n    return (\n      <div\n        className={classNames(\n          'nhsuk-feedback-banner',\n          { 'nhsuk-feedback-banner__shown': shown },\n          { 'js-inview': jsInView },\n          className\n        )}\n        id={id}\n        {...rest}\n      >\n        <Container>\n          <Row>\n            <Row.Column width=\"full\">\n              <div className=\"nhsuk-feedback-banner__content\">\n                <h2 className=\"nhsuk-feedback-banner__heading\">{title}</h2>\n                <p className=\"nhsuk-feedback-banner__message\">\n                  {children}\n                  {label ? (\n                    <a\n                      href={href}\n                      onClick={onClick}\n                      id={`${id ? `${id}__label` : null}`}\n                      className=\"nhsuk-u-nowrap nhsuk-feedback-banner__label\"\n                    >\n                      {label}\n                    </a>\n                  ) : null}\n                </p>\n                <button\n                  className=\"nhsuk-feedback-banner__close\"\n                  id=\"nhsuk-feedback-banner-close\"\n                  type=\"button\"\n                  onClick={() => this.toggleBanner(false)}\n                >\n                  Close\n                  <span className=\"nhsuk-u-visually-hidden\">\n                    {visuallyHiddenText}\n                  </span>\n                </button>\n              </div>\n            </Row.Column>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default FeedbackBanner;\n"],"file":"feedback-banner.js"}